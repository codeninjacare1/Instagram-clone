"""
Django settings for Django_Instagram project.
Generated by 'django-admin startproject' using Django 4.1.5.
"""

import os
from pathlib import Path
import dj_database_url
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-e_ybrd)6lj3s(up17hy%yc=@5u_dou-@c%1y(v*yic+f-zm86#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

# ALLOWED_HOSTS = ['*']  # or your Render domain
ALLOWED_HOSTS = ['insta-8dau.onrender.com', 'localhost', '127.0.0.1', '*']
# ALLOWED_HOSTS = [
#     'localhost',
#     '127.0.0.1',
#     os.getenv('RAILWAY_HOST', 'web-production-2e02.up.railway.app')
# ]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Your apps
    'post',
    'crispy_forms',
    'crispy_bootstrap5',
    'authy',
    'comment',
    'directs',
    'notification',
    'widget_tweaks',
    'cloudinary_storage',
    'cloudinary',
    'storyapp',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Add for static files on Render
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'authy.middleware.ActiveUserMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
]

ROOT_URLCONF = 'Django_Instagram.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'notification.views.notification_count',
                'Django_Instagram.context_processors.unread_messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Django_Instagram.wsgi.application'

# Database
DATABASES = {
    'default': dj_database_url.config(
        default=config('DATABASE_URL', default='sqlite:///db.sqlite3'),
        conn_max_age=600
    )
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# File Storage Configuration
if DEBUG:
    # Use local file system storage in development
    DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'
# else:
    # Use Cloudinary storage in production
    # CLOUDINARY_STORAGE = {
    #     'CLOUD_NAME': 'dd7czcoed',
    #     'API_KEY': '939533368744947',
    #     'API_SECRET': 'LZYW33qY0N5uN0aw0e9thUgEfls',
    # }
    # DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

# Email settings (use app password for Gmail if 2FA enabled)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'codeninjacare1@gmail.com'
EMAIL_HOST_PASSWORD = 'xfkm qlvg qomi xqyb'

# Authentication redirects
LOGIN_REDIRECT_URL = 'index'
LOGOUT_REDIRECT_URL = 'sign-in'
LOGIN_URL = 'sign-in'

# Crispy forms
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Heroku integration (must be last line)
# django_heroku.settings(locals())


# try:
#     import django_heroku
#     django_heroku.settings(locals())
# except ImportError: 
#     pass 



# ─── Security Settings ─────────────────────────────────────────
# Security settings that work in both development and production
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'SAMEORIGIN'

# HSTS settings
SECURE_HSTS_SECONDS = 3600
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# SSL settings - only enable in production
if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
else:
    SECURE_SSL_REDIRECT = False
    SESSION_COOKIE_SECURE = False
    CSRF_COOKIE_SECURE = False

# django-cron settings
CRON_CLASSES = [
    'cron.DeleteExpiredStoriesCronJob',
]

 